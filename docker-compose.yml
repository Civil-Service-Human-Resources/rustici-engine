version: '3.8'
services:

  rustici-engine:
    networks:
      - network
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./env/rusticiLocalEnv
    depends_on:
      - mysql
      - azurite
      - csl-service
    ports:
      - 3000:8080
    volumes:
      - ./config/RusticiEngineSettings.properties:/usr/local/tomcat/lib/RusticiEngineSettings.properties
  
  azurite:
    networks:
      - network
    image: mcr.microsoft.com/azure-storage/azurite
    command: "azurite --loose --blobHost 0.0.0.0 --blobPort 9100 --queueHost 0.0.0.0 --location /workspace --debug /workspace/debug.log"
    ports:
      - 9100:9100

  setup-azurite:
    networks:
      - network
    depends_on:
      - azurite
    build: 
      context: ./setup_azure_storage
      dockerfile: Dockerfile

  mysql:
    networks:
      - network
    image: mysql:8.0
    volumes:
      - dbdata:/var/lib/mysql
      - ./mysql:/tmp/database
    ports:
      - 3306:3306
    command: mysqld --init-file="/tmp/database/setup.sql"
    environment: 
      - MYSQL_ROOT_PASSWORD=my-secret-pw

  # replace this with the actual csl-service when it's ready. For now,
  # use a dummy endpoint to ensure that rollup data is being sent correctly.
  csl-service:
    networks:
      - network
    build:
      context: ./csl-service
      dockerfile: Dockerfile
    ports:
      - 9003:9003
    volumes:
      - ./csl-service/app.py:/app/app.py

  # Uncomment this when the actual csl-service is ready to receive connections from Rustici
  # csl-service:
  #   networks:
  #     - network
  #   image: lpgregistry.azurecr.io/csl-service:idt-develop
  #   ports:
  #     - 9003:9003

  nginx:
    container_name: nginx
    networks:
        network:
          aliases:
            - csl.local
    image: nginx:stable-alpine
    restart: always
    ports:
      - 80:80
    depends_on: 
      - rustici-engine
      - azurite
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf

volumes:
  dbdata:

networks:
  network:
    name: network